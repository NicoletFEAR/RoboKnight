// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4786.RobotKnight.subsystems;

import org.usfirst.frc4786.RobotKnight.RobotMap;
import org.usfirst.frc4786.RobotKnight.commands.*;

import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.CANTalon.ControlMode;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {
	
	public DriveTrain(){
		backLeft.changeControlMode(ControlMode.Follower);
		backRight.changeControlMode(ControlMode.Follower);
		backLeft.set(3);
		backRight.set(2);
	}
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	//CANTalon objects
	CANTalon backLeft = new CANTalon(0);
	CANTalon backRight = new CANTalon(1);
	CANTalon frontLeft = new CANTalon(3);
	CANTalon frontRight = new CANTalon(2);

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new Drive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }


	public void drive(double leftInput, double rightInput) {
		//scales between .5 and -.5
		//did this because we don't know what the maximum speed of the motors is
		double leftOutput = leftInput / 2;
		double rightOutput = rightInput / 2;
		frontLeft.set(leftOutput);
		frontRight.set(rightOutput);
	}
}

